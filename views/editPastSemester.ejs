<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <title>GPA Tracker</title>
    </head>
    
    
    <body style="background-color: #ede7f6">
        
        <nav class="navbar navbar-expand-sm" style="background-color: #3f51b5;">
        <div class="container-fluid">
            <a class="navbar-brand" href="/" style="color:white"><b>GPA Tracker</b></a>
        </div>
        </nav> <br>


        <!-- Main Bootstrap container for padding and layout -->
<div class="container">
    <br> 

    <!-- Form to edit modules of a specific semester -->
    <div>
        <!-- Form submits to backend using POST with semesterId in the URL -->
        <form action="/editPastSemester/<%= pastsemester[0].semesterId %>" method="POST">
            
            <!-- Row for semester dropdown -->
            <div class="row g-4">
                <div class="col-auto text-center">
                    <label for="semester">Semester Name:</label>
                </div>

                <div class="col-auto">
                    <!-- Dropdown for selecting semester -->
                    <select id="semester" name="semester" required>
                        <% const current = pastsemester[0].semester; %>
                        <% ['Y1S1','Y1S2'].forEach(sem => { %>
                            <!-- Select current semester as default -->
                            <option value="<%= sem %>" <%= sem === current ? 'selected' : '' %>><%= sem %></option>
                        <% }) %>
                    </select>
                </div>
            </div>
        
            <br>

            <!-- Button to add a new module form row dynamically -->
            <button class="btn" type="button" id="add-module-btn" style="background-color: #3f51b5; color:white">Add Module +</button>
            <br><br><br>
            
            <!-- Container for all module input groups -->
            <div id="module-container">
                <!-- Loop through each module to display pre-filled input fields -->
                <% pastsemester.forEach((module, index) => { %>
                <div class="module-group row g-4">
                    
                    <!-- Module Name input -->
                    <div class="col-auto text-center">
                        <label for="module">Module Name</label><br><br>
                        <input type="text" name="module[]" value="<%= module.module %>" required><br><br>
                    </div>

                    <!-- Module Code input -->
                    <div class="col-auto text-center">
                        <label for="code">Module Code</label><br><br>
                        <input type="text" name="code[]" value="<%= module.code %>" required><br><br>
                    </div>

                    <!-- Grade dropdown -->
                    <div class="col-auto text-center">
                        <label for="grade">Final Grade</label><br><br>
                        <select name="grade[]" required>
                            <% ['A','B+','B','C+','C','D+','D','F','Pass'].forEach(g => { %>
                                <option value="<%= g %>" <%= module.grade === g ? 'selected' : '' %>><%= g %></option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- Credits input -->
                    <div class="col-auto text-center">
                        <label for="credits">Module Credits</label><br><br>
                        <input type="number" class="text-center" name="credits[]" value="<%= module.credits %>" min="1" max="6" step="1" required><br><br>
                    </div>

                    <!-- Delete button for this row (JS only, does not touch DB) -->
                    <div class="col-auto">
                        <button class="btn btn-sm delete-module-btn" type="button" style="background-color: #3f51b5; color:white;">Delete</button>
                    </div>

                </div>
                <% }) %>
            </div>
            
            <br><br>

            <!-- Submit button to save all module changes -->
            <button class="btn" type="submit" style="background-color: #3f51b5; color:white">Save</button>
        </form>
    </div>
</div>
        

    <script>
    document.addEventListener('DOMContentLoaded', () => {
    const addButton = document.getElementById('add-module-btn');       // Add module button
    const container = document.getElementById('module-container');     // Module form container

    // Function to add delete handlers to all delete buttons
    function bindDeleteButtons() {
        const deleteButtons = container.querySelectorAll('.btn[type="button"]');

        deleteButtons.forEach(button => {
            button.removeEventListener('click', deleteHandler); // Avoid multiple bindings
            button.addEventListener('click', deleteHandler);    // Add fresh listener
        });
    }

    // Function to handle delete button click
    function deleteHandler(event) {
        const confirmed = confirm("Are you sure you want to delete this module?");
        if (!confirmed) return; // User cancelled, stop deletion

        const allGroups = container.querySelectorAll('.module-group');
        if (allGroups.length <= 1) {
            alert("At least one module is required."); // Prevent deleting all modules
            return;
        }

        const moduleGroup = event.target.closest('.module-group'); // Find parent group
        if (moduleGroup) {
            container.removeChild(moduleGroup); // Remove that module block
        }
    }

    // Handler for Add Module button
    addButton.addEventListener('click', () => {
        const moduleGroups = container.querySelectorAll('.module-group');
        const lastGroup = moduleGroups[moduleGroups.length - 1];

        // Validate last group before cloning (no empty fields)
        const inputs = lastGroup.querySelectorAll('input, select');
        let filled = true;
        inputs.forEach(input => {
            if (input.value.trim() === '') filled = false;
        });

        if (!filled) {
            alert('Please fill in all fields before adding another module.');
            return;
        }

        // Clone last group and reset its input values
        const clone = lastGroup.cloneNode(true);
        clone.querySelectorAll('input, select').forEach(input => input.value = '');
        container.appendChild(clone); // Add to DOM
        bindDeleteButtons();          // Rebind delete button
    });

    bindDeleteButtons(); // Initial bind on page load
    });
    </script>

    </body>
</html>


